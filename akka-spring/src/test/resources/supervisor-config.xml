<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:akka="http://www.akkasource.org/schema/akka"
       xmlns:beans="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.akkasource.org/schema/akka
http://scalablesolutions.se/akka/akka-0.10.xsd">

  <akka:supervision id="supervision1">
    <akka:restart-strategy failover="AllForOne" retries="3" timerange="1000">
      <akka:trap-exits>
        <akka:trap-exit>java.io.IOException</akka:trap-exit>
        <akka:trap-exit>java.lang.NullPointerException</akka:trap-exit>
      </akka:trap-exits>
    </akka:restart-strategy>
    <akka:typed-actors>
      <akka:typed-actor interface="se.scalablesolutions.akka.spring.foo.IFoo"
                        implementation="se.scalablesolutions.akka.spring.foo.Foo"
                        lifecycle="permanent"
                        timeout="1000"/>
      <akka:typed-actor interface="se.scalablesolutions.akka.spring.foo.IBar"
                        implementation="se.scalablesolutions.akka.spring.foo.Bar"
                        lifecycle="permanent"
                        timeout="1000"/>
      <akka:typed-actor interface="se.scalablesolutions.akka.spring.foo.IMyPojo"
                        implementation="se.scalablesolutions.akka.spring.foo.MyPojo"
                        lifecycle="temporary"
                        timeout="1000">
      </akka:typed-actor>
    </akka:typed-actors>
  </akka:supervision>

  <akka:supervision id="supervision-untyped-actors">
    <akka:restart-strategy failover="AllForOne" retries="3" timerange="1000">
      <akka:trap-exits>
        <akka:trap-exit>java.io.IOException</akka:trap-exit>
        <akka:trap-exit>java.lang.NullPointerException</akka:trap-exit>
      </akka:trap-exits>
    </akka:restart-strategy>
    <akka:untyped-actors>
      <akka:untyped-actor implementation="se.scalablesolutions.akka.spring.foo.PingActor"
                        lifecycle="permanent"
                        timeout="1000"/>
      <akka:untyped-actor implementation="se.scalablesolutions.akka.spring.foo.PongActor"
                        lifecycle="permanent"
                        timeout="1000"/>
      </akka:untyped-actors>
  </akka:supervision>

<!--
  <akka:supervision id="supervision2">
    <akka:restart-strategy failover="AllForOne" retries="3" timerange="5000">
      <akka:trap-exits>
        <akka:trap-exit>java.lang.Exception</akka:trap-exit>
      </akka:trap-exits>
    </akka:restart-strategy>
    <akka:typed-actors>
      <akka:typed-actor implementation="se.scalablesolutions.akka.spring.foo.StatefulPojo" lifecycle="permanent"
                          timeout="10000" transactional="true"/>
    </akka:typed-actors>
  </akka:supervision>
    -->
  <akka:dispatcher id="mydispatcher" type="executor-based-event-driven" name="myDispatcher">
    <akka:thread-pool queue="bounded-array-blocking-queue"
                      capacity="100"
                      fairness="true"
                      core-pool-size="1"
                      max-pool-size="20"
                      keep-alive="3000"/>
  </akka:dispatcher>

  <akka:supervision id="supervision-with-dispatcher">
    <akka:restart-strategy failover="AllForOne" retries="3" timerange="1000">
      <akka:trap-exits>
        <akka:trap-exit>java.lang.Exception</akka:trap-exit>
      </akka:trap-exits>
    </akka:restart-strategy>
    <akka:typed-actors>
      <akka:typed-actor interface="se.scalablesolutions.akka.spring.foo.IFoo"
                        implementation="se.scalablesolutions.akka.spring.foo.Foo"
                        lifecycle="permanent"
                        timeout="1000">
        <akka:dispatcher ref="mydispatcher" />
      </akka:typed-actor>
      <akka:typed-actor interface="se.scalablesolutions.akka.spring.foo.IMyPojo"
                        implementation="se.scalablesolutions.akka.spring.foo.MyPojo"
                        lifecycle="temporary"
                        timeout="1000">
        <akka:dispatcher ref="mydispatcher" />
      </akka:typed-actor>
    </akka:typed-actors>
  </akka:supervision>

<!--  <akka:supervision id="parent-supervision">
    <akka:restart-strategy failover="AllForOne" retries="3" timerange="1000">
      <akka:trap-exits>
        <akka:trap-exit>java.lang.Exception</akka:trap-exit>
      </akka:trap-exits>
    </akka:restart-strategy>
    <akka:typed-actors>
      <akka:typed-actor implementation="se.scalablesolutions.akka.spring.foo.Foo" lifecycle="permanent" timeout="1000" />
      <akka:typed-actor implementation="se.scalablesolutions.akka.spring.foo.MyPojo" lifecycle="temporary" timeout="1000" />
    </akka:typed-actors>
    <akka:supervision id="nested-supervision">
      <akka:restart-strategy failover="AllForOne" retries="3" timerange="1000">
        <akka:trap-exits>
          <akka:trap-exit>java.lang.IOException</akka:trap-exit>
        </akka:trap-exits>
      </akka:restart-strategy>
      <akka:typed-actors>
        <akka:typed-actor implementation="se.scalablesolutions.akka.spring.foo.Bar" lifecycle="permanent" timeout="1000" />
      </akka:typed-actors>
    </akka:supervision>
  </akka:supervision>
  -->

</beans>
