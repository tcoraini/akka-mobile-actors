1 - É melhor que a ordem de migração seja:
  - Via uma mensagem do tipo MigrateTo(node): dessa forma qualquer um (em princípio) poderia solicitar a migração do ator para um outro nó
  - Via uma chamada de método, possivelmente privada para o pacote, portanto restringindo quem poderia fazer essa requisição de migração.

2 - Uma referência a um ator móvel remoto precisa ser atualizada para apontar diretamente para a instância local quando esse ator migra para a mesma máquina da referência. Abordagens e possíveis soluções:
  - Se a referência é apenas um intermediário para uma outra referência que de fato processa a mensagem, basta trocar essa referência "atrás" do intermediário.
  - Se a referência é uma classe híbrida que assume os 2 comportamentos (tanto de referência local quanto de referência remota)...manter uma tabela de todas as referências em usa (locais e remotas) naquele computador?

3 - UUID do AspectWerkz parece ser gerado apenas com base no currentTimeInMillis(). Isso é seguro? Será viável acreditar que possam aparecer UUID's iguais em máquinas diferentes?

4 - O que fazer quando um ator remoto não pode ser encontrado pela referência? Por exemplo, quando o nó em que ele estava cai, e o ator não tinha sido migrado.

5 - A comunicação toda baseada em netty requer alguns cuidados. No tratamento de eventos, não é possível tentar abrir uma nova conexão chamando "await". Isso causa problema por exemplo na seguinte situação: a mensagem chega num nó, mas o ator não está lá. O nó verifica no serviço de nomes e encontra o ator em outro nó, com quem ele ainda não possui uma conexão. Ao tentar abrir essa conexão, ele lança uma exceção, por chamar 'await' dentro de um método de tratamento de eventos (messageReceived). Uma solução seria executar ações como essa do encaminhamento de mensagens em novas threads.

6 - Como tratar a migração de um ator co-locado com outros? Possibilidades:
  - Um dos atores recebe um MoveTo, mover todos
  - MoveTo move apenas o ator (tirando-o do grupo), adicionar mensagem MoveGroupTo para explicitamente solicitar a migração de todos
